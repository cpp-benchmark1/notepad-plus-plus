name: Coverity Scan
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      languages:
        description: "Languages to analyze"
        required: true
        default: "c-cpp"

jobs:
  coverity:
    runs-on: windows-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Download and Install Coverity Tool
        run: |
          Invoke-WebRequest -Uri "https://scan.coverity.com/download/win64" `
            -Method Post -Body "token=${{ secrets.COVERITY_TOKEN }}&project=${{ github.repository }}" `
            -OutFile "coverity_tool.zip"
          Expand-Archive -Path coverity_tool.zip -DestinationPath coverity_tool
          $Env:PATH = "$PWD\coverity_tool\bin;$Env:PATH"
          Write-Output "Coverity Tool installed successfully"
        shell: pwsh

      - name: Prepend Git usr/bin to PATH
        run: echo "C:\Program Files\Git\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: pwsh

      - name: Build with Coverity
        run: |
          $covPath = Join-Path $PWD 'coverity_tool\bin\cov-build.exe'
          if (Test-Path $covPath) {
            Write-Output "✅ Coverity build tool found at $covPath"
            
            # Cria diretório cov-int se não existir
            $covDir = Join-Path $PWD "cov-int"
            if (-not (Test-Path $covDir)) {
              New-Item -ItemType Directory -Path $covDir | Out-Null
            }

            cd PowerEditor\gcc
            & $covPath --dir ../../cov-int make
            cd ../../
          } else {
            Write-Warning "❌ Could not find Coverity executable at $covPath. Skipping build."
          }
        shell: pwsh

      - name: Compress Coverity Output
        run: |
          $covDir = Join-Path $PWD "cov-int"
          if (Test-Path $covDir) {
            Compress-Archive -Path $covDir -DestinationPath myproject.zip -Force
            Write-Output "✅ Coverity output compressed to myproject.zip"
          } else {
            Write-Warning "⚠️ Directory cov-int does not exist. Skipping compression."
          }
        shell: pwsh

      - name: Create GitHub Release
        if: exists('myproject.zip')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "coverity-scan-${{ github.run_id }}"
          release_name: "Coverity Scan Results"
          body: "Automated Coverity Scan Results"
          draft: false
          prerelease: false

      - name: Upload Asset to Release
        if: exists('myproject.zip')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: myproject.zip
          asset_name: myproject.zip
          asset_content_type: application/x-bzip2
